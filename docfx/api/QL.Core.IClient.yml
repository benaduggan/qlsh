### YamlMime:ManagedReference
items:
- uid: QL.Core.IClient
  commentId: T:QL.Core.IClient
  id: IClient
  parent: QL.Core
  children:
  - QL.Core.IClient.DownloadFileAsync(System.String,System.String,System.Threading.CancellationToken)
  - QL.Core.IClient.DownloadFileAsync(System.String,System.Threading.CancellationToken)
  - QL.Core.IClient.ExecuteCommandAsync(System.String,System.Threading.CancellationToken)
  - QL.Core.IClient.IsToolInstalledAsync(System.String,System.Threading.CancellationToken)
  - QL.Core.IClient.Type
  - QL.Core.IClient.UploadFileAsync(System.IO.FileStream,System.String,System.Threading.CancellationToken)
  - QL.Core.IClient.UploadFileAsync(System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IClient
  nameWithType: IClient
  fullName: QL.Core.IClient
  type: Interface
  source:
    remote:
      path: src/QL.Core/IClient.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: IClient
    path: ../src/QL.Core/IClient.cs
    startLine: 20
  assemblies:
  - QL.Core
  namespace: QL.Core
  syntax:
    content: public interface IClient
    content.vb: Public Interface IClient
  extensionMethods:
  - System.Object.QL.Engine.Extensions.ObjectExtensions.ToDictionary
- uid: QL.Core.IClient.Type
  commentId: P:QL.Core.IClient.Type
  id: Type
  parent: QL.Core.IClient
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IClient.Type
  fullName: QL.Core.IClient.Type
  type: Property
  source:
    remote:
      path: src/QL.Core/IClient.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: Type
    path: ../src/QL.Core/IClient.cs
    startLine: 25
  assemblies:
  - QL.Core
  namespace: QL.Core
  example: []
  syntax:
    content: SessionType Type { get; }
    parameters: []
    return:
      type: QL.Core.SessionType
    content.vb: ReadOnly Property Type As SessionType
  overload: QL.Core.IClient.Type*
- uid: QL.Core.IClient.ExecuteCommandAsync(System.String,System.Threading.CancellationToken)
  commentId: M:QL.Core.IClient.ExecuteCommandAsync(System.String,System.Threading.CancellationToken)
  id: ExecuteCommandAsync(System.String,System.Threading.CancellationToken)
  parent: QL.Core.IClient
  langs:
  - csharp
  - vb
  name: ExecuteCommandAsync(string, CancellationToken)
  nameWithType: IClient.ExecuteCommandAsync(string, CancellationToken)
  fullName: QL.Core.IClient.ExecuteCommandAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/QL.Core/IClient.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: ExecuteCommandAsync
    path: ../src/QL.Core/IClient.cs
    startLine: 30
  assemblies:
  - QL.Core
  namespace: QL.Core
  example: []
  syntax:
    content: Task<ICommandOutput> ExecuteCommandAsync(string command, CancellationToken cancellationToken = default)
    parameters:
    - id: command
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{QL.Core.ICommandOutput}
    content.vb: Function ExecuteCommandAsync(command As String, cancellationToken As CancellationToken = Nothing) As Task(Of ICommandOutput)
  overload: QL.Core.IClient.ExecuteCommandAsync*
  nameWithType.vb: IClient.ExecuteCommandAsync(String, CancellationToken)
  fullName.vb: QL.Core.IClient.ExecuteCommandAsync(String, System.Threading.CancellationToken)
  name.vb: ExecuteCommandAsync(String, CancellationToken)
- uid: QL.Core.IClient.UploadFileAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:QL.Core.IClient.UploadFileAsync(System.String,System.String,System.Threading.CancellationToken)
  id: UploadFileAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: QL.Core.IClient
  langs:
  - csharp
  - vb
  name: UploadFileAsync(string, string, CancellationToken)
  nameWithType: IClient.UploadFileAsync(string, string, CancellationToken)
  fullName: QL.Core.IClient.UploadFileAsync(string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/QL.Core/IClient.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: UploadFileAsync
    path: ../src/QL.Core/IClient.cs
    startLine: 36
  assemblies:
  - QL.Core
  namespace: QL.Core
  example: []
  syntax:
    content: Task<bool> UploadFileAsync(string localPath, string remotePath, CancellationToken cancellationToken = default)
    parameters:
    - id: localPath
      type: System.String
    - id: remotePath
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function UploadFileAsync(localPath As String, remotePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: QL.Core.IClient.UploadFileAsync*
  nameWithType.vb: IClient.UploadFileAsync(String, String, CancellationToken)
  fullName.vb: QL.Core.IClient.UploadFileAsync(String, String, System.Threading.CancellationToken)
  name.vb: UploadFileAsync(String, String, CancellationToken)
- uid: QL.Core.IClient.UploadFileAsync(System.IO.FileStream,System.String,System.Threading.CancellationToken)
  commentId: M:QL.Core.IClient.UploadFileAsync(System.IO.FileStream,System.String,System.Threading.CancellationToken)
  id: UploadFileAsync(System.IO.FileStream,System.String,System.Threading.CancellationToken)
  parent: QL.Core.IClient
  langs:
  - csharp
  - vb
  name: UploadFileAsync(FileStream, string, CancellationToken)
  nameWithType: IClient.UploadFileAsync(FileStream, string, CancellationToken)
  fullName: QL.Core.IClient.UploadFileAsync(System.IO.FileStream, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/QL.Core/IClient.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: UploadFileAsync
    path: ../src/QL.Core/IClient.cs
    startLine: 42
  assemblies:
  - QL.Core
  namespace: QL.Core
  example: []
  syntax:
    content: Task<bool> UploadFileAsync(FileStream fileStream, string remotePath, CancellationToken cancellationToken = default)
    parameters:
    - id: fileStream
      type: System.IO.FileStream
    - id: remotePath
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function UploadFileAsync(fileStream As FileStream, remotePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: QL.Core.IClient.UploadFileAsync*
  nameWithType.vb: IClient.UploadFileAsync(FileStream, String, CancellationToken)
  fullName.vb: QL.Core.IClient.UploadFileAsync(System.IO.FileStream, String, System.Threading.CancellationToken)
  name.vb: UploadFileAsync(FileStream, String, CancellationToken)
- uid: QL.Core.IClient.DownloadFileAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:QL.Core.IClient.DownloadFileAsync(System.String,System.String,System.Threading.CancellationToken)
  id: DownloadFileAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: QL.Core.IClient
  langs:
  - csharp
  - vb
  name: DownloadFileAsync(string, string, CancellationToken)
  nameWithType: IClient.DownloadFileAsync(string, string, CancellationToken)
  fullName: QL.Core.IClient.DownloadFileAsync(string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/QL.Core/IClient.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: DownloadFileAsync
    path: ../src/QL.Core/IClient.cs
    startLine: 48
  assemblies:
  - QL.Core
  namespace: QL.Core
  example: []
  syntax:
    content: Task<FileStream?> DownloadFileAsync(string remotePath, string localPath, CancellationToken cancellationToken = default)
    parameters:
    - id: remotePath
      type: System.String
    - id: localPath
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.IO.FileStream}
    content.vb: Function DownloadFileAsync(remotePath As String, localPath As String, cancellationToken As CancellationToken = Nothing) As Task(Of FileStream)
  overload: QL.Core.IClient.DownloadFileAsync*
  nameWithType.vb: IClient.DownloadFileAsync(String, String, CancellationToken)
  fullName.vb: QL.Core.IClient.DownloadFileAsync(String, String, System.Threading.CancellationToken)
  name.vb: DownloadFileAsync(String, String, CancellationToken)
- uid: QL.Core.IClient.DownloadFileAsync(System.String,System.Threading.CancellationToken)
  commentId: M:QL.Core.IClient.DownloadFileAsync(System.String,System.Threading.CancellationToken)
  id: DownloadFileAsync(System.String,System.Threading.CancellationToken)
  parent: QL.Core.IClient
  langs:
  - csharp
  - vb
  name: DownloadFileAsync(string, CancellationToken)
  nameWithType: IClient.DownloadFileAsync(string, CancellationToken)
  fullName: QL.Core.IClient.DownloadFileAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/QL.Core/IClient.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: DownloadFileAsync
    path: ../src/QL.Core/IClient.cs
    startLine: 54
  assemblies:
  - QL.Core
  namespace: QL.Core
  example: []
  syntax:
    content: Task<FileStream?> DownloadFileAsync(string remotePath, CancellationToken cancellationToken = default)
    parameters:
    - id: remotePath
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.IO.FileStream}
    content.vb: Function DownloadFileAsync(remotePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of FileStream)
  overload: QL.Core.IClient.DownloadFileAsync*
  nameWithType.vb: IClient.DownloadFileAsync(String, CancellationToken)
  fullName.vb: QL.Core.IClient.DownloadFileAsync(String, System.Threading.CancellationToken)
  name.vb: DownloadFileAsync(String, CancellationToken)
- uid: QL.Core.IClient.IsToolInstalledAsync(System.String,System.Threading.CancellationToken)
  commentId: M:QL.Core.IClient.IsToolInstalledAsync(System.String,System.Threading.CancellationToken)
  id: IsToolInstalledAsync(System.String,System.Threading.CancellationToken)
  parent: QL.Core.IClient
  langs:
  - csharp
  - vb
  name: IsToolInstalledAsync(string, CancellationToken)
  nameWithType: IClient.IsToolInstalledAsync(string, CancellationToken)
  fullName: QL.Core.IClient.IsToolInstalledAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/QL.Core/IClient.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: IsToolInstalledAsync
    path: ../src/QL.Core/IClient.cs
    startLine: 60
  assemblies:
  - QL.Core
  namespace: QL.Core
  example: []
  syntax:
    content: Task<bool> IsToolInstalledAsync(string toolName, CancellationToken cancellationToken = default)
    parameters:
    - id: toolName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function IsToolInstalledAsync(toolName As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: QL.Core.IClient.IsToolInstalledAsync*
  nameWithType.vb: IClient.IsToolInstalledAsync(String, CancellationToken)
  fullName.vb: QL.Core.IClient.IsToolInstalledAsync(String, System.Threading.CancellationToken)
  name.vb: IsToolInstalledAsync(String, CancellationToken)
references:
- uid: QL.Core
  commentId: N:QL.Core
  href: QL.html
  name: QL.Core
  nameWithType: QL.Core
  fullName: QL.Core
  spec.csharp:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Core
    name: Core
    href: QL.Core.html
  spec.vb:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Core
    name: Core
    href: QL.Core.html
- uid: System.Object.QL.Engine.Extensions.ObjectExtensions.ToDictionary
  commentId: M:QL.Engine.Extensions.ObjectExtensions.ToDictionary(System.Object)
  parent: QL.Engine.Extensions.ObjectExtensions
  definition: QL.Engine.Extensions.ObjectExtensions.ToDictionary(System.Object)
  href: QL.Engine.Extensions.ObjectExtensions.html#QL_Engine_Extensions_ObjectExtensions_ToDictionary_System_Object_
  name: ToDictionary(object)
  nameWithType: ObjectExtensions.ToDictionary(object)
  fullName: QL.Engine.Extensions.ObjectExtensions.ToDictionary(object)
  nameWithType.vb: ObjectExtensions.ToDictionary(Object)
  fullName.vb: QL.Engine.Extensions.ObjectExtensions.ToDictionary(Object)
  name.vb: ToDictionary(Object)
  spec.csharp:
  - uid: QL.Engine.Extensions.ObjectExtensions.ToDictionary(System.Object)
    name: ToDictionary
    href: QL.Engine.Extensions.ObjectExtensions.html#QL_Engine_Extensions_ObjectExtensions_ToDictionary_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: QL.Engine.Extensions.ObjectExtensions.ToDictionary(System.Object)
    name: ToDictionary
    href: QL.Engine.Extensions.ObjectExtensions.html#QL_Engine_Extensions_ObjectExtensions_ToDictionary_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: QL.Engine.Extensions.ObjectExtensions.ToDictionary(System.Object)
  commentId: M:QL.Engine.Extensions.ObjectExtensions.ToDictionary(System.Object)
  isExternal: true
  href: QL.Engine.Extensions.ObjectExtensions.html#QL_Engine_Extensions_ObjectExtensions_ToDictionary_System_Object_
  name: ToDictionary(object)
  nameWithType: ObjectExtensions.ToDictionary(object)
  fullName: QL.Engine.Extensions.ObjectExtensions.ToDictionary(object)
  nameWithType.vb: ObjectExtensions.ToDictionary(Object)
  fullName.vb: QL.Engine.Extensions.ObjectExtensions.ToDictionary(Object)
  name.vb: ToDictionary(Object)
  spec.csharp:
  - uid: QL.Engine.Extensions.ObjectExtensions.ToDictionary(System.Object)
    name: ToDictionary
    href: QL.Engine.Extensions.ObjectExtensions.html#QL_Engine_Extensions_ObjectExtensions_ToDictionary_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: QL.Engine.Extensions.ObjectExtensions.ToDictionary(System.Object)
    name: ToDictionary
    href: QL.Engine.Extensions.ObjectExtensions.html#QL_Engine_Extensions_ObjectExtensions_ToDictionary_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: QL.Engine.Extensions.ObjectExtensions
  commentId: T:QL.Engine.Extensions.ObjectExtensions
  parent: QL.Engine.Extensions
  href: QL.Engine.Extensions.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: QL.Engine.Extensions.ObjectExtensions
- uid: QL.Engine.Extensions
  commentId: N:QL.Engine.Extensions
  href: QL.html
  name: QL.Engine.Extensions
  nameWithType: QL.Engine.Extensions
  fullName: QL.Engine.Extensions
  spec.csharp:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Engine
    name: Engine
    href: QL.Engine.html
  - name: .
  - uid: QL.Engine.Extensions
    name: Extensions
    href: QL.Engine.Extensions.html
  spec.vb:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Engine
    name: Engine
    href: QL.Engine.html
  - name: .
  - uid: QL.Engine.Extensions
    name: Extensions
    href: QL.Engine.Extensions.html
- uid: QL.Core.IClient.Type*
  commentId: Overload:QL.Core.IClient.Type
  href: QL.Core.IClient.html#QL_Core_IClient_Type
  name: Type
  nameWithType: IClient.Type
  fullName: QL.Core.IClient.Type
- uid: QL.Core.SessionType
  commentId: T:QL.Core.SessionType
  parent: QL.Core
  href: QL.Core.SessionType.html
  name: SessionType
  nameWithType: SessionType
  fullName: QL.Core.SessionType
- uid: QL.Core.IClient.ExecuteCommandAsync*
  commentId: Overload:QL.Core.IClient.ExecuteCommandAsync
  href: QL.Core.IClient.html#QL_Core_IClient_ExecuteCommandAsync_System_String_System_Threading_CancellationToken_
  name: ExecuteCommandAsync
  nameWithType: IClient.ExecuteCommandAsync
  fullName: QL.Core.IClient.ExecuteCommandAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{QL.Core.ICommandOutput}
  commentId: T:System.Threading.Tasks.Task{QL.Core.ICommandOutput}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ICommandOutput>
  nameWithType: Task<ICommandOutput>
  fullName: System.Threading.Tasks.Task<QL.Core.ICommandOutput>
  nameWithType.vb: Task(Of ICommandOutput)
  fullName.vb: System.Threading.Tasks.Task(Of QL.Core.ICommandOutput)
  name.vb: Task(Of ICommandOutput)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
    href: QL.Core.ICommandOutput.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
    href: QL.Core.ICommandOutput.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: QL.Core.IClient.UploadFileAsync*
  commentId: Overload:QL.Core.IClient.UploadFileAsync
  href: QL.Core.IClient.html#QL_Core_IClient_UploadFileAsync_System_String_System_String_System_Threading_CancellationToken_
  name: UploadFileAsync
  nameWithType: IClient.UploadFileAsync
  fullName: QL.Core.IClient.UploadFileAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.IO.FileStream
  commentId: T:System.IO.FileStream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.filestream
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: QL.Core.IClient.DownloadFileAsync*
  commentId: Overload:QL.Core.IClient.DownloadFileAsync
  href: QL.Core.IClient.html#QL_Core_IClient_DownloadFileAsync_System_String_System_String_System_Threading_CancellationToken_
  name: DownloadFileAsync
  nameWithType: IClient.DownloadFileAsync
  fullName: QL.Core.IClient.DownloadFileAsync
- uid: System.Threading.Tasks.Task{System.IO.FileStream}
  commentId: T:System.Threading.Tasks.Task{System.IO.FileStream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<FileStream>
  nameWithType: Task<FileStream>
  fullName: System.Threading.Tasks.Task<System.IO.FileStream>
  nameWithType.vb: Task(Of FileStream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.FileStream)
  name.vb: Task(Of FileStream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.IO.FileStream
    name: FileStream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.filestream
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.FileStream
    name: FileStream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.filestream
  - name: )
- uid: QL.Core.IClient.IsToolInstalledAsync*
  commentId: Overload:QL.Core.IClient.IsToolInstalledAsync
  href: QL.Core.IClient.html#QL_Core_IClient_IsToolInstalledAsync_System_String_System_Threading_CancellationToken_
  name: IsToolInstalledAsync
  nameWithType: IClient.IsToolInstalledAsync
  fullName: QL.Core.IClient.IsToolInstalledAsync
