### YamlMime:ManagedReference
items:
- uid: QL.Engine.Extensions.NodeExtensions
  commentId: T:QL.Engine.Extensions.NodeExtensions
  id: NodeExtensions
  parent: QL.Engine.Extensions
  children:
  - QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary(QL.Parser.AST.Nodes.FieldNode)
  - QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary(System.Collections.Generic.IEnumerable{QL.Parser.AST.Nodes.ArgumentNode})
  - QL.Engine.Extensions.NodeExtensions.GetFields(QL.Parser.AST.Nodes.FieldNode)
  langs:
  - csharp
  - vb
  name: NodeExtensions
  nameWithType: NodeExtensions
  fullName: QL.Engine.Extensions.NodeExtensions
  type: Class
  source:
    remote:
      path: src/QL.Engine/Extensions/NodeExtensions.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: NodeExtensions
    path: ../src/QL.Engine/Extensions/NodeExtensions.cs
    startLine: 6
  assemblies:
  - qlsh
  namespace: QL.Engine.Extensions
  syntax:
    content: public static class NodeExtensions
    content.vb: Public Module NodeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary(QL.Parser.AST.Nodes.FieldNode)
  commentId: M:QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary(QL.Parser.AST.Nodes.FieldNode)
  id: BuildArgumentsDictionary(QL.Parser.AST.Nodes.FieldNode)
  isExtensionMethod: true
  parent: QL.Engine.Extensions.NodeExtensions
  langs:
  - csharp
  - vb
  name: BuildArgumentsDictionary(FieldNode)
  nameWithType: NodeExtensions.BuildArgumentsDictionary(FieldNode)
  fullName: QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary(QL.Parser.AST.Nodes.FieldNode)
  type: Method
  source:
    remote:
      path: src/QL.Engine/Extensions/NodeExtensions.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: BuildArgumentsDictionary
    path: ../src/QL.Engine/Extensions/NodeExtensions.cs
    startLine: 8
  assemblies:
  - qlsh
  namespace: QL.Engine.Extensions
  syntax:
    content: public static IReadOnlyDictionary<string, object> BuildArgumentsDictionary(this FieldNode field)
    parameters:
    - id: field
      type: QL.Parser.AST.Nodes.FieldNode
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    content.vb: Public Shared Function BuildArgumentsDictionary(field As FieldNode) As IReadOnlyDictionary(Of String, Object)
  overload: QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary*
- uid: QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary(System.Collections.Generic.IEnumerable{QL.Parser.AST.Nodes.ArgumentNode})
  commentId: M:QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary(System.Collections.Generic.IEnumerable{QL.Parser.AST.Nodes.ArgumentNode})
  id: BuildArgumentsDictionary(System.Collections.Generic.IEnumerable{QL.Parser.AST.Nodes.ArgumentNode})
  isExtensionMethod: true
  parent: QL.Engine.Extensions.NodeExtensions
  langs:
  - csharp
  - vb
  name: BuildArgumentsDictionary(IEnumerable<ArgumentNode>)
  nameWithType: NodeExtensions.BuildArgumentsDictionary(IEnumerable<ArgumentNode>)
  fullName: QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary(System.Collections.Generic.IEnumerable<QL.Parser.AST.Nodes.ArgumentNode>)
  type: Method
  source:
    remote:
      path: src/QL.Engine/Extensions/NodeExtensions.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: BuildArgumentsDictionary
    path: ../src/QL.Engine/Extensions/NodeExtensions.cs
    startLine: 13
  assemblies:
  - qlsh
  namespace: QL.Engine.Extensions
  syntax:
    content: public static IReadOnlyDictionary<string, object> BuildArgumentsDictionary(this IEnumerable<ArgumentNode> arguments)
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{QL.Parser.AST.Nodes.ArgumentNode}
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
    content.vb: Public Shared Function BuildArgumentsDictionary(arguments As IEnumerable(Of ArgumentNode)) As IReadOnlyDictionary(Of String, Object)
  overload: QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary*
  nameWithType.vb: NodeExtensions.BuildArgumentsDictionary(IEnumerable(Of ArgumentNode))
  fullName.vb: QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary(System.Collections.Generic.IEnumerable(Of QL.Parser.AST.Nodes.ArgumentNode))
  name.vb: BuildArgumentsDictionary(IEnumerable(Of ArgumentNode))
- uid: QL.Engine.Extensions.NodeExtensions.GetFields(QL.Parser.AST.Nodes.FieldNode)
  commentId: M:QL.Engine.Extensions.NodeExtensions.GetFields(QL.Parser.AST.Nodes.FieldNode)
  id: GetFields(QL.Parser.AST.Nodes.FieldNode)
  isExtensionMethod: true
  parent: QL.Engine.Extensions.NodeExtensions
  langs:
  - csharp
  - vb
  name: GetFields(FieldNode)
  nameWithType: NodeExtensions.GetFields(FieldNode)
  fullName: QL.Engine.Extensions.NodeExtensions.GetFields(QL.Parser.AST.Nodes.FieldNode)
  type: Method
  source:
    remote:
      path: src/QL.Engine/Extensions/NodeExtensions.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: GetFields
    path: ../src/QL.Engine/Extensions/NodeExtensions.cs
    startLine: 18
  assemblies:
  - qlsh
  namespace: QL.Engine.Extensions
  syntax:
    content: public static IField[] GetFields(this FieldNode field)
    parameters:
    - id: field
      type: QL.Parser.AST.Nodes.FieldNode
    return:
      type: QL.Core.Actions.IField[]
    content.vb: Public Shared Function GetFields(field As FieldNode) As IField()
  overload: QL.Engine.Extensions.NodeExtensions.GetFields*
references:
- uid: QL.Engine.Extensions
  commentId: N:QL.Engine.Extensions
  href: QL.html
  name: QL.Engine.Extensions
  nameWithType: QL.Engine.Extensions
  fullName: QL.Engine.Extensions
  spec.csharp:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Engine
    name: Engine
    href: QL.Engine.html
  - name: .
  - uid: QL.Engine.Extensions
    name: Extensions
    href: QL.Engine.Extensions.html
  spec.vb:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Engine
    name: Engine
    href: QL.Engine.html
  - name: .
  - uid: QL.Engine.Extensions
    name: Extensions
    href: QL.Engine.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary*
  commentId: Overload:QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary
  href: QL.Engine.Extensions.NodeExtensions.html#QL_Engine_Extensions_NodeExtensions_BuildArgumentsDictionary_QL_Parser_AST_Nodes_FieldNode_
  name: BuildArgumentsDictionary
  nameWithType: NodeExtensions.BuildArgumentsDictionary
  fullName: QL.Engine.Extensions.NodeExtensions.BuildArgumentsDictionary
- uid: QL.Parser.AST.Nodes.FieldNode
  commentId: T:QL.Parser.AST.Nodes.FieldNode
  parent: QL.Parser.AST.Nodes
  href: QL.Parser.AST.Nodes.FieldNode.html
  name: FieldNode
  nameWithType: FieldNode
  fullName: QL.Parser.AST.Nodes.FieldNode
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, object>
  nameWithType: IReadOnlyDictionary<string, object>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, object>
  nameWithType.vb: IReadOnlyDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, Object)
  name.vb: IReadOnlyDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: QL.Parser.AST.Nodes
  commentId: N:QL.Parser.AST.Nodes
  href: QL.html
  name: QL.Parser.AST.Nodes
  nameWithType: QL.Parser.AST.Nodes
  fullName: QL.Parser.AST.Nodes
  spec.csharp:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Parser
    name: Parser
    href: QL.Parser.html
  - name: .
  - uid: QL.Parser.AST
    name: AST
    href: QL.Parser.AST.html
  - name: .
  - uid: QL.Parser.AST.Nodes
    name: Nodes
    href: QL.Parser.AST.Nodes.html
  spec.vb:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Parser
    name: Parser
    href: QL.Parser.html
  - name: .
  - uid: QL.Parser.AST
    name: AST
    href: QL.Parser.AST.html
  - name: .
  - uid: QL.Parser.AST.Nodes
    name: Nodes
    href: QL.Parser.AST.Nodes.html
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable{QL.Parser.AST.Nodes.ArgumentNode}
  commentId: T:System.Collections.Generic.IEnumerable{QL.Parser.AST.Nodes.ArgumentNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ArgumentNode>
  nameWithType: IEnumerable<ArgumentNode>
  fullName: System.Collections.Generic.IEnumerable<QL.Parser.AST.Nodes.ArgumentNode>
  nameWithType.vb: IEnumerable(Of ArgumentNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of QL.Parser.AST.Nodes.ArgumentNode)
  name.vb: IEnumerable(Of ArgumentNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: QL.Parser.AST.Nodes.ArgumentNode
    name: ArgumentNode
    href: QL.Parser.AST.Nodes.ArgumentNode.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: QL.Parser.AST.Nodes.ArgumentNode
    name: ArgumentNode
    href: QL.Parser.AST.Nodes.ArgumentNode.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: QL.Engine.Extensions.NodeExtensions.GetFields*
  commentId: Overload:QL.Engine.Extensions.NodeExtensions.GetFields
  href: QL.Engine.Extensions.NodeExtensions.html#QL_Engine_Extensions_NodeExtensions_GetFields_QL_Parser_AST_Nodes_FieldNode_
  name: GetFields
  nameWithType: NodeExtensions.GetFields
  fullName: QL.Engine.Extensions.NodeExtensions.GetFields
- uid: QL.Core.Actions.IField[]
  isExternal: true
  href: QL.Core.Actions.IField.html
  name: IField[]
  nameWithType: IField[]
  fullName: QL.Core.Actions.IField[]
  nameWithType.vb: IField()
  fullName.vb: QL.Core.Actions.IField()
  name.vb: IField()
  spec.csharp:
  - uid: QL.Core.Actions.IField
    name: IField
    href: QL.Core.Actions.IField.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: QL.Core.Actions.IField
    name: IField
    href: QL.Core.Actions.IField.html
  - name: (
  - name: )
