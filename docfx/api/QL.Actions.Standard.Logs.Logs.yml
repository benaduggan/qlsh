### YamlMime:ManagedReference
items:
- uid: QL.Actions.Standard.Logs.Logs
  commentId: T:QL.Actions.Standard.Logs.Logs
  id: Logs
  parent: QL.Actions.Standard.Logs
  children:
  - QL.Actions.Standard.Logs.Logs.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  - QL.Actions.Standard.Logs.Logs.ParseCommandResults(QL.Core.ICommandOutput)
  langs:
  - csharp
  - vb
  name: Logs
  nameWithType: Logs
  fullName: QL.Actions.Standard.Logs.Logs
  type: Class
  source:
    remote:
      path: src/QL.Actions/Standard/Logs/Logs.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: Logs
    path: ../src/QL.Actions/Standard/Logs/Logs.cs
    startLine: 48
  assemblies:
  - QL.Actions
  namespace: QL.Actions.Standard.Logs
  syntax:
    content: 'public class Logs : ActionBase<LogsArguments, List<LogEntry>>, IAction'
    content.vb: Public Class Logs Inherits ActionBase(Of LogsArguments, List(Of LogEntry)) Implements IAction
  inheritance:
  - System.Object
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  implements:
  - QL.Core.Actions.IAction
  inheritedMembers:
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.Platform
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.Initialize(QL.Core.Platform)
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetArguments
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteAsync(QL.Actions.Standard.Logs.LogsArguments,QL.Core.IClient,System.String,System.Threading.CancellationToken)
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ValidateResults(QL.Core.ICommandOutput)
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetCommandTemplate
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetRegex
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetDeps
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ParseCommandResults(QL.Core.ICommandOutput)
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  - QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: QL.Actions.Standard.Logs.Logs.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  commentId: M:QL.Actions.Standard.Logs.Logs.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  id: BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  parent: QL.Actions.Standard.Logs.Logs
  langs:
  - csharp
  - vb
  name: BuildCommand(LogsArguments)
  nameWithType: Logs.BuildCommand(LogsArguments)
  fullName: QL.Actions.Standard.Logs.Logs.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  type: Method
  source:
    remote:
      path: src/QL.Actions/Standard/Logs/Logs.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: BuildCommand
    path: ../src/QL.Actions/Standard/Logs/Logs.cs
    startLine: 53
  assemblies:
  - QL.Actions
  namespace: QL.Actions.Standard.Logs
  example: []
  syntax:
    content: protected override string BuildCommand(LogsArguments arguments)
    parameters:
    - id: arguments
      type: QL.Actions.Standard.Logs.LogsArguments
    return:
      type: System.String
    content.vb: Protected Overrides Function BuildCommand(arguments As LogsArguments) As String
  overridden: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  overload: QL.Actions.Standard.Logs.Logs.BuildCommand*
- uid: QL.Actions.Standard.Logs.Logs.ParseCommandResults(QL.Core.ICommandOutput)
  commentId: M:QL.Actions.Standard.Logs.Logs.ParseCommandResults(QL.Core.ICommandOutput)
  id: ParseCommandResults(QL.Core.ICommandOutput)
  parent: QL.Actions.Standard.Logs.Logs
  langs:
  - csharp
  - vb
  name: ParseCommandResults(ICommandOutput)
  nameWithType: Logs.ParseCommandResults(ICommandOutput)
  fullName: QL.Actions.Standard.Logs.Logs.ParseCommandResults(QL.Core.ICommandOutput)
  type: Method
  source:
    remote:
      path: src/QL.Actions/Standard/Logs/Logs.cs
      branch: main
      repo: git@github.com:rszemplinski/qlsh.git
    id: ParseCommandResults
    path: ../src/QL.Actions/Standard/Logs/Logs.cs
    startLine: 63
  assemblies:
  - QL.Actions
  namespace: QL.Actions.Standard.Logs
  example: []
  syntax:
    content: protected override List<LogEntry> ParseCommandResults(ICommandOutput commandResults)
    parameters:
    - id: commandResults
      type: QL.Core.ICommandOutput
    return:
      type: System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}
    content.vb: Protected Overrides Function ParseCommandResults(commandResults As ICommandOutput) As List(Of LogEntry)
  overridden: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ParseCommandResults(QL.Core.ICommandOutput)
  overload: QL.Actions.Standard.Logs.Logs.ParseCommandResults*
references:
- uid: QL.Actions.Standard.Logs
  commentId: N:QL.Actions.Standard.Logs
  href: QL.html
  name: QL.Actions.Standard.Logs
  nameWithType: QL.Actions.Standard.Logs
  fullName: QL.Actions.Standard.Logs
  spec.csharp:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Actions
    name: Actions
    href: QL.Actions.html
  - name: .
  - uid: QL.Actions.Standard
    name: Standard
    href: QL.Actions.Standard.html
  - name: .
  - uid: QL.Actions.Standard.Logs
    name: Logs
    href: QL.Actions.Standard.Logs.html
  spec.vb:
  - uid: QL
    name: QL
    href: QL.html
  - name: .
  - uid: QL.Actions
    name: Actions
    href: QL.Actions.html
  - name: .
  - uid: QL.Actions.Standard
    name: Standard
    href: QL.Actions.Standard.html
  - name: .
  - uid: QL.Actions.Standard.Logs
    name: Logs
    href: QL.Actions.Standard.Logs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  commentId: T:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  parent: QL.Core.Actions
  definition: QL.Core.Actions.ActionBase`2
  href: QL.Actions.Standard.Logs.LogsArguments.html
  name: ActionBase<LogsArguments, List<LogEntry>>
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry))
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry))
  name.vb: ActionBase(Of LogsArguments, List(Of LogEntry))
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2
    name: ActionBase
  - name: <
  - uid: QL.Actions.Standard.Logs.LogsArguments
    name: LogsArguments
    href: QL.Actions.Standard.Logs.LogsArguments.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: QL.Actions.Standard.Logs.LogEntry
    name: LogEntry
    href: QL.Actions.Standard.Logs.LogEntry.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2
    name: ActionBase
  - name: (
  - name: Of
  - name: " "
  - uid: QL.Actions.Standard.Logs.LogsArguments
    name: LogsArguments
    href: QL.Actions.Standard.Logs.LogsArguments.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: QL.Actions.Standard.Logs.LogEntry
    name: LogEntry
    href: QL.Actions.Standard.Logs.LogEntry.html
  - name: )
  - name: )
- uid: QL.Core.Actions.IAction
  commentId: T:QL.Core.Actions.IAction
  parent: QL.Core.Actions
  name: IAction
  nameWithType: IAction
  fullName: QL.Core.Actions.IAction
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.Platform
  commentId: P:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.Platform
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.Platform
  name: Platform
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.Platform
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.Platform
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).Platform
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).Platform
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.Initialize(QL.Core.Platform)
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.Initialize(QL.Core.Platform)
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.Initialize(QL.Core.Platform)
  name: Initialize(Platform)
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.Initialize(Platform)
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.Initialize(QL.Core.Platform)
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).Initialize(Platform)
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).Initialize(QL.Core.Platform)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.Initialize(QL.Core.Platform)
    name: Initialize
  - name: (
  - uid: QL.Core.Platform
    name: Platform
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.Initialize(QL.Core.Platform)
    name: Initialize
  - name: (
  - uid: QL.Core.Platform
    name: Platform
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetArguments
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetArguments
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.GetArguments
  name: GetArguments()
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.GetArguments()
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.GetArguments()
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).GetArguments()
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).GetArguments()
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetArguments
    name: GetArguments
  - name: (
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetArguments
    name: GetArguments
  - name: (
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: ExecuteCommandAsync(IClient, IReadOnlyDictionary<string, object>, IReadOnlyCollection<IField>, CancellationToken)
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.ExecuteCommandAsync(IClient, IReadOnlyDictionary<string, object>, IReadOnlyCollection<IField>, CancellationToken)
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.ExecuteCommandAsync(QL.Core.IClient, System.Collections.Generic.IReadOnlyDictionary<string, object>, System.Collections.Generic.IReadOnlyCollection<QL.Core.Actions.IField>, System.Threading.CancellationToken)
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).ExecuteCommandAsync(IClient, IReadOnlyDictionary(Of String, Object), IReadOnlyCollection(Of IField), CancellationToken)
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).ExecuteCommandAsync(QL.Core.IClient, System.Collections.Generic.IReadOnlyDictionary(Of String, Object), System.Collections.Generic.IReadOnlyCollection(Of QL.Core.Actions.IField), System.Threading.CancellationToken)
  name.vb: ExecuteCommandAsync(IClient, IReadOnlyDictionary(Of String, Object), IReadOnlyCollection(Of IField), CancellationToken)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
    name: ExecuteCommandAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: QL.Core.Actions.IField
    name: IField
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
    name: ExecuteCommandAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: QL.Core.Actions.IField
    name: IField
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteAsync(QL.Actions.Standard.Logs.LogsArguments,QL.Core.IClient,System.String,System.Threading.CancellationToken)
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteAsync(QL.Actions.Standard.Logs.LogsArguments,QL.Core.IClient,System.String,System.Threading.CancellationToken)
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.ExecuteAsync(`0,QL.Core.IClient,System.String,System.Threading.CancellationToken)
  href: QL.Actions.Standard.Logs.LogsArguments.html
  name: ExecuteAsync(LogsArguments, IClient, string, CancellationToken)
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.ExecuteAsync(LogsArguments, IClient, string, CancellationToken)
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.ExecuteAsync(QL.Actions.Standard.Logs.LogsArguments, QL.Core.IClient, string, System.Threading.CancellationToken)
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).ExecuteAsync(LogsArguments, IClient, String, CancellationToken)
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).ExecuteAsync(QL.Actions.Standard.Logs.LogsArguments, QL.Core.IClient, String, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(LogsArguments, IClient, String, CancellationToken)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteAsync(QL.Actions.Standard.Logs.LogsArguments,QL.Core.IClient,System.String,System.Threading.CancellationToken)
    name: ExecuteAsync
  - name: (
  - uid: QL.Actions.Standard.Logs.LogsArguments
    name: LogsArguments
    href: QL.Actions.Standard.Logs.LogsArguments.html
  - name: ','
  - name: " "
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ExecuteAsync(QL.Actions.Standard.Logs.LogsArguments,QL.Core.IClient,System.String,System.Threading.CancellationToken)
    name: ExecuteAsync
  - name: (
  - uid: QL.Actions.Standard.Logs.LogsArguments
    name: LogsArguments
    href: QL.Actions.Standard.Logs.LogsArguments.html
  - name: ','
  - name: " "
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ValidateResults(QL.Core.ICommandOutput)
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ValidateResults(QL.Core.ICommandOutput)
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.ValidateResults(QL.Core.ICommandOutput)
  name: ValidateResults(ICommandOutput)
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.ValidateResults(ICommandOutput)
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.ValidateResults(QL.Core.ICommandOutput)
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).ValidateResults(ICommandOutput)
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).ValidateResults(QL.Core.ICommandOutput)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ValidateResults(QL.Core.ICommandOutput)
    name: ValidateResults
  - name: (
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ValidateResults(QL.Core.ICommandOutput)
    name: ValidateResults
  - name: (
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.BuildCommand(`0)
  href: QL.Actions.Standard.Logs.LogsArguments.html
  name: BuildCommand(LogsArguments)
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.BuildCommand(LogsArguments)
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).BuildCommand(LogsArguments)
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
    name: BuildCommand
  - name: (
  - uid: QL.Actions.Standard.Logs.LogsArguments
    name: LogsArguments
    href: QL.Actions.Standard.Logs.LogsArguments.html
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.BuildCommand(QL.Actions.Standard.Logs.LogsArguments)
    name: BuildCommand
  - name: (
  - uid: QL.Actions.Standard.Logs.LogsArguments
    name: LogsArguments
    href: QL.Actions.Standard.Logs.LogsArguments.html
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetCommandTemplate
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetCommandTemplate
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.GetCommandTemplate
  name: GetCommandTemplate()
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.GetCommandTemplate()
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.GetCommandTemplate()
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).GetCommandTemplate()
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).GetCommandTemplate()
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetCommandTemplate
    name: GetCommandTemplate
  - name: (
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetCommandTemplate
    name: GetCommandTemplate
  - name: (
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetRegex
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetRegex
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.GetRegex
  name: GetRegex()
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.GetRegex()
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.GetRegex()
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).GetRegex()
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).GetRegex()
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetRegex
    name: GetRegex
  - name: (
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetRegex
    name: GetRegex
  - name: (
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetDeps
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetDeps
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.GetDeps
  name: GetDeps()
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.GetDeps()
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.GetDeps()
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).GetDeps()
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).GetDeps()
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetDeps
    name: GetDeps
  - name: (
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.GetDeps
    name: GetDeps
  - name: (
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ParseCommandResults(QL.Core.ICommandOutput)
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ParseCommandResults(QL.Core.ICommandOutput)
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.ParseCommandResults(QL.Core.ICommandOutput)
  name: ParseCommandResults(ICommandOutput)
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.ParseCommandResults(ICommandOutput)
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.ParseCommandResults(QL.Core.ICommandOutput)
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).ParseCommandResults(ICommandOutput)
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).ParseCommandResults(QL.Core.ICommandOutput)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ParseCommandResults(QL.Core.ICommandOutput)
    name: ParseCommandResults
  - name: (
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.ParseCommandResults(QL.Core.ICommandOutput)
    name: ParseCommandResults
  - name: (
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: SetupAsync(IClient, CancellationToken)
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.SetupAsync(IClient, CancellationToken)
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.SetupAsync(QL.Core.IClient, System.Threading.CancellationToken)
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).SetupAsync(IClient, CancellationToken)
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).SetupAsync(QL.Core.IClient, System.Threading.CancellationToken)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
    name: SetupAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
    name: SetupAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  commentId: M:QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  parent: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}
  definition: QL.Core.Actions.ActionBase`2.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CleanupAsync(IClient, CancellationToken)
  nameWithType: ActionBase<LogsArguments, List<LogEntry>>.CleanupAsync(IClient, CancellationToken)
  fullName: QL.Core.Actions.ActionBase<QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>>.CleanupAsync(QL.Core.IClient, System.Threading.CancellationToken)
  nameWithType.vb: ActionBase(Of LogsArguments, List(Of LogEntry)).CleanupAsync(IClient, CancellationToken)
  fullName.vb: QL.Core.Actions.ActionBase(Of QL.Actions.Standard.Logs.LogsArguments, System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)).CleanupAsync(QL.Core.IClient, System.Threading.CancellationToken)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
    name: CleanupAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase{QL.Actions.Standard.Logs.LogsArguments,System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}}.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
    name: CleanupAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: QL.Core.Actions.ActionBase`2
  commentId: T:QL.Core.Actions.ActionBase`2
  name: ActionBase<TArgs, TReturnType>
  nameWithType: ActionBase<TArgs, TReturnType>
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>
  nameWithType.vb: ActionBase(Of TArgs, TReturnType)
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType)
  name.vb: ActionBase(Of TArgs, TReturnType)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2
    name: ActionBase
  - name: <
  - name: TArgs
  - name: ','
  - name: " "
  - name: TReturnType
  - name: '>'
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2
    name: ActionBase
  - name: (
  - name: Of
  - name: " "
  - name: TArgs
  - name: ','
  - name: " "
  - name: TReturnType
  - name: )
- uid: QL.Core.Actions
  commentId: N:QL.Core.Actions
  name: QL.Core.Actions
  nameWithType: QL.Core.Actions
  fullName: QL.Core.Actions
  spec.csharp:
  - uid: QL
    name: QL
  - name: .
  - uid: QL.Core
    name: Core
  - name: .
  - uid: QL.Core.Actions
    name: Actions
  spec.vb:
  - uid: QL
    name: QL
  - name: .
  - uid: QL.Core
    name: Core
  - name: .
  - uid: QL.Core.Actions
    name: Actions
- uid: QL.Core.Actions.ActionBase`2.Platform
  commentId: P:QL.Core.Actions.ActionBase`2.Platform
  name: Platform
  nameWithType: ActionBase<TArgs, TReturnType>.Platform
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.Platform
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).Platform
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).Platform
- uid: QL.Core.Actions.ActionBase`2.Initialize(QL.Core.Platform)
  commentId: M:QL.Core.Actions.ActionBase`2.Initialize(QL.Core.Platform)
  name: Initialize(Platform)
  nameWithType: ActionBase<TArgs, TReturnType>.Initialize(Platform)
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.Initialize(QL.Core.Platform)
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).Initialize(Platform)
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).Initialize(QL.Core.Platform)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.Initialize(QL.Core.Platform)
    name: Initialize
  - name: (
  - uid: QL.Core.Platform
    name: Platform
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.Initialize(QL.Core.Platform)
    name: Initialize
  - name: (
  - uid: QL.Core.Platform
    name: Platform
  - name: )
- uid: QL.Core.Actions.ActionBase`2.GetArguments
  commentId: M:QL.Core.Actions.ActionBase`2.GetArguments
  name: GetArguments()
  nameWithType: ActionBase<TArgs, TReturnType>.GetArguments()
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.GetArguments()
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).GetArguments()
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).GetArguments()
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.GetArguments
    name: GetArguments
  - name: (
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.GetArguments
    name: GetArguments
  - name: (
  - name: )
- uid: QL.Core.Actions.ActionBase`2.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
  commentId: M:QL.Core.Actions.ActionBase`2.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: ExecuteCommandAsync(IClient, IReadOnlyDictionary<string, object>, IReadOnlyCollection<IField>, CancellationToken)
  nameWithType: ActionBase<TArgs, TReturnType>.ExecuteCommandAsync(IClient, IReadOnlyDictionary<string, object>, IReadOnlyCollection<IField>, CancellationToken)
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.ExecuteCommandAsync(QL.Core.IClient, System.Collections.Generic.IReadOnlyDictionary<string, object>, System.Collections.Generic.IReadOnlyCollection<QL.Core.Actions.IField>, System.Threading.CancellationToken)
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).ExecuteCommandAsync(IClient, IReadOnlyDictionary(Of String, Object), IReadOnlyCollection(Of IField), CancellationToken)
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).ExecuteCommandAsync(QL.Core.IClient, System.Collections.Generic.IReadOnlyDictionary(Of String, Object), System.Collections.Generic.IReadOnlyCollection(Of QL.Core.Actions.IField), System.Threading.CancellationToken)
  name.vb: ExecuteCommandAsync(IClient, IReadOnlyDictionary(Of String, Object), IReadOnlyCollection(Of IField), CancellationToken)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
    name: ExecuteCommandAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: QL.Core.Actions.IField
    name: IField
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.ExecuteCommandAsync(QL.Core.IClient,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyCollection{QL.Core.Actions.IField},System.Threading.CancellationToken)
    name: ExecuteCommandAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: QL.Core.Actions.IField
    name: IField
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: QL.Core.Actions.ActionBase`2.ExecuteAsync(`0,QL.Core.IClient,System.String,System.Threading.CancellationToken)
  commentId: M:QL.Core.Actions.ActionBase`2.ExecuteAsync(`0,QL.Core.IClient,System.String,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ExecuteAsync(TArgs, IClient, string, CancellationToken)
  nameWithType: ActionBase<TArgs, TReturnType>.ExecuteAsync(TArgs, IClient, string, CancellationToken)
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.ExecuteAsync(TArgs, QL.Core.IClient, string, System.Threading.CancellationToken)
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).ExecuteAsync(TArgs, IClient, String, CancellationToken)
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).ExecuteAsync(TArgs, QL.Core.IClient, String, System.Threading.CancellationToken)
  name.vb: ExecuteAsync(TArgs, IClient, String, CancellationToken)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.ExecuteAsync(`0,QL.Core.IClient,System.String,System.Threading.CancellationToken)
    name: ExecuteAsync
  - name: (
  - name: TArgs
  - name: ','
  - name: " "
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.ExecuteAsync(`0,QL.Core.IClient,System.String,System.Threading.CancellationToken)
    name: ExecuteAsync
  - name: (
  - name: TArgs
  - name: ','
  - name: " "
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: QL.Core.Actions.ActionBase`2.ValidateResults(QL.Core.ICommandOutput)
  commentId: M:QL.Core.Actions.ActionBase`2.ValidateResults(QL.Core.ICommandOutput)
  name: ValidateResults(ICommandOutput)
  nameWithType: ActionBase<TArgs, TReturnType>.ValidateResults(ICommandOutput)
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.ValidateResults(QL.Core.ICommandOutput)
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).ValidateResults(ICommandOutput)
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).ValidateResults(QL.Core.ICommandOutput)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.ValidateResults(QL.Core.ICommandOutput)
    name: ValidateResults
  - name: (
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.ValidateResults(QL.Core.ICommandOutput)
    name: ValidateResults
  - name: (
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
  - name: )
- uid: QL.Core.Actions.ActionBase`2.BuildCommand(`0)
  commentId: M:QL.Core.Actions.ActionBase`2.BuildCommand(`0)
  name: BuildCommand(TArgs)
  nameWithType: ActionBase<TArgs, TReturnType>.BuildCommand(TArgs)
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.BuildCommand(TArgs)
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).BuildCommand(TArgs)
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).BuildCommand(TArgs)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.BuildCommand(`0)
    name: BuildCommand
  - name: (
  - name: TArgs
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.BuildCommand(`0)
    name: BuildCommand
  - name: (
  - name: TArgs
  - name: )
- uid: QL.Core.Actions.ActionBase`2.GetCommandTemplate
  commentId: M:QL.Core.Actions.ActionBase`2.GetCommandTemplate
  name: GetCommandTemplate()
  nameWithType: ActionBase<TArgs, TReturnType>.GetCommandTemplate()
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.GetCommandTemplate()
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).GetCommandTemplate()
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).GetCommandTemplate()
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.GetCommandTemplate
    name: GetCommandTemplate
  - name: (
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.GetCommandTemplate
    name: GetCommandTemplate
  - name: (
  - name: )
- uid: QL.Core.Actions.ActionBase`2.GetRegex
  commentId: M:QL.Core.Actions.ActionBase`2.GetRegex
  name: GetRegex()
  nameWithType: ActionBase<TArgs, TReturnType>.GetRegex()
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.GetRegex()
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).GetRegex()
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).GetRegex()
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.GetRegex
    name: GetRegex
  - name: (
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.GetRegex
    name: GetRegex
  - name: (
  - name: )
- uid: QL.Core.Actions.ActionBase`2.GetDeps
  commentId: M:QL.Core.Actions.ActionBase`2.GetDeps
  name: GetDeps()
  nameWithType: ActionBase<TArgs, TReturnType>.GetDeps()
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.GetDeps()
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).GetDeps()
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).GetDeps()
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.GetDeps
    name: GetDeps
  - name: (
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.GetDeps
    name: GetDeps
  - name: (
  - name: )
- uid: QL.Core.Actions.ActionBase`2.ParseCommandResults(QL.Core.ICommandOutput)
  commentId: M:QL.Core.Actions.ActionBase`2.ParseCommandResults(QL.Core.ICommandOutput)
  name: ParseCommandResults(ICommandOutput)
  nameWithType: ActionBase<TArgs, TReturnType>.ParseCommandResults(ICommandOutput)
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.ParseCommandResults(QL.Core.ICommandOutput)
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).ParseCommandResults(ICommandOutput)
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).ParseCommandResults(QL.Core.ICommandOutput)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.ParseCommandResults(QL.Core.ICommandOutput)
    name: ParseCommandResults
  - name: (
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.ParseCommandResults(QL.Core.ICommandOutput)
    name: ParseCommandResults
  - name: (
  - uid: QL.Core.ICommandOutput
    name: ICommandOutput
  - name: )
- uid: QL.Core.Actions.ActionBase`2.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  commentId: M:QL.Core.Actions.ActionBase`2.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: SetupAsync(IClient, CancellationToken)
  nameWithType: ActionBase<TArgs, TReturnType>.SetupAsync(IClient, CancellationToken)
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.SetupAsync(QL.Core.IClient, System.Threading.CancellationToken)
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).SetupAsync(IClient, CancellationToken)
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).SetupAsync(QL.Core.IClient, System.Threading.CancellationToken)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
    name: SetupAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.SetupAsync(QL.Core.IClient,System.Threading.CancellationToken)
    name: SetupAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: QL.Core.Actions.ActionBase`2.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  commentId: M:QL.Core.Actions.ActionBase`2.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CleanupAsync(IClient, CancellationToken)
  nameWithType: ActionBase<TArgs, TReturnType>.CleanupAsync(IClient, CancellationToken)
  fullName: QL.Core.Actions.ActionBase<TArgs, TReturnType>.CleanupAsync(QL.Core.IClient, System.Threading.CancellationToken)
  nameWithType.vb: ActionBase(Of TArgs, TReturnType).CleanupAsync(IClient, CancellationToken)
  fullName.vb: QL.Core.Actions.ActionBase(Of TArgs, TReturnType).CleanupAsync(QL.Core.IClient, System.Threading.CancellationToken)
  spec.csharp:
  - uid: QL.Core.Actions.ActionBase`2.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
    name: CleanupAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: QL.Core.Actions.ActionBase`2.CleanupAsync(QL.Core.IClient,System.Threading.CancellationToken)
    name: CleanupAsync
  - name: (
  - uid: QL.Core.IClient
    name: IClient
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: QL.Actions.Standard.Logs.Logs.BuildCommand*
  commentId: Overload:QL.Actions.Standard.Logs.Logs.BuildCommand
  href: QL.Actions.Standard.Logs.Logs.html#QL_Actions_Standard_Logs_Logs_BuildCommand_QL_Actions_Standard_Logs_LogsArguments_
  name: BuildCommand
  nameWithType: Logs.BuildCommand
  fullName: QL.Actions.Standard.Logs.Logs.BuildCommand
- uid: QL.Actions.Standard.Logs.LogsArguments
  commentId: T:QL.Actions.Standard.Logs.LogsArguments
  parent: QL.Actions.Standard.Logs
  href: QL.Actions.Standard.Logs.LogsArguments.html
  name: LogsArguments
  nameWithType: LogsArguments
  fullName: QL.Actions.Standard.Logs.LogsArguments
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: QL.Actions.Standard.Logs.Logs.ParseCommandResults*
  commentId: Overload:QL.Actions.Standard.Logs.Logs.ParseCommandResults
  href: QL.Actions.Standard.Logs.Logs.html#QL_Actions_Standard_Logs_Logs_ParseCommandResults_QL_Core_ICommandOutput_
  name: ParseCommandResults
  nameWithType: Logs.ParseCommandResults
  fullName: QL.Actions.Standard.Logs.Logs.ParseCommandResults
- uid: QL.Core.ICommandOutput
  commentId: T:QL.Core.ICommandOutput
  parent: QL.Core
  name: ICommandOutput
  nameWithType: ICommandOutput
  fullName: QL.Core.ICommandOutput
- uid: System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}
  commentId: T:System.Collections.Generic.List{QL.Actions.Standard.Logs.LogEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LogEntry>
  nameWithType: List<LogEntry>
  fullName: System.Collections.Generic.List<QL.Actions.Standard.Logs.LogEntry>
  nameWithType.vb: List(Of LogEntry)
  fullName.vb: System.Collections.Generic.List(Of QL.Actions.Standard.Logs.LogEntry)
  name.vb: List(Of LogEntry)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: QL.Actions.Standard.Logs.LogEntry
    name: LogEntry
    href: QL.Actions.Standard.Logs.LogEntry.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: QL.Actions.Standard.Logs.LogEntry
    name: LogEntry
    href: QL.Actions.Standard.Logs.LogEntry.html
  - name: )
- uid: QL.Core
  commentId: N:QL.Core
  name: QL.Core
  nameWithType: QL.Core
  fullName: QL.Core
  spec.csharp:
  - uid: QL
    name: QL
  - name: .
  - uid: QL.Core
    name: Core
  spec.vb:
  - uid: QL
    name: QL
  - name: .
  - uid: QL.Core
    name: Core
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
